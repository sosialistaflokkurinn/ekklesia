"""Change constraint names to fit the convention.

The naming convention is taken from the alembic documentation:

https://alembic.sqlalchemy.org/en/latest/naming.html

Revision ID: 9f82f82119dd
Revises: 24e8f6789a15
Create Date: 2020-08-09 11:45:00.741735

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.util.langhelpers import constructor_copy


# revision identifiers, used by Alembic.
revision = '9f82f82119dd'
down_revision = '911c994268aa'
branch_labels = None
depends_on = None

constraints = [('areamembers',
  'areamembers_area_id_fkey',
  'fk_areamembers_area_id_subjectareas'),
 ('areamembers',
  'areamembers_member_id_fkey',
  'fk_areamembers_member_id_users'),
 ('areamembers', 'areamembers_pkey', 'pk_areamembers'),
 ('argumentrelations',
  'argumentrelations_argument_id_fkey',
  'fk_argumentrelations_argument_id_arguments'),
 ('argumentrelations',
  'argumentrelations_parent_id_fkey',
  'fk_argumentrelations_parent_id_argumentrelations'),
 ('argumentrelations',
  'argumentrelations_proposition_id_fkey',
  'fk_argumentrelations_proposition_id_propositions'),
 ('argumentrelations', 'argumentrelations_pkey', 'pk_argumentrelations'),
 ('arguments', 'arguments_author_id_fkey', 'fk_arguments_author_id_users'),
 ('arguments', 'arguments_pkey', 'pk_arguments'),
 ('argumentvotes',
  'argumentvotes_member_id_fkey',
  'fk_argumentvotes_member_id_users'),
 ('argumentvotes',
  'argumentvotes_relation_id_fkey',
  'fk_argumentvotes_relation_id_argumentrelations'),
 ('argumentvotes', 'argumentvotes_pkey', 'pk_argumentvotes'),
 ('ballots', 'ballots_area_id_fkey', 'fk_ballots_area_id_subjectareas'),
 ('ballots',
  'ballots_proposition_type_id_fkey',
  'fk_ballots_proposition_type_id_propositiontypes'),
 ('ballots', 'ballots_voting_id_fkey', 'fk_ballots_voting_id_votingphases'),
 ('ballots', 'ballots_pkey', 'pk_ballots'),
 ('changeset',
  'changeset_document_id_fkey',
  'fk_changeset_document_id_document'),
 ('changeset',
  'changeset_proposition_id_fkey',
  'fk_changeset_proposition_id_propositions'),
 ('changeset', 'changeset_pkey', 'pk_changeset'),
 ('customizable_text', 'customizable_text_pkey', 'pk_customizable_text'),
 ('departmentmembers',
  'departmentmembers_department_id_fkey',
  'fk_departmentmembers_department_id_departments'),
 ('departmentmembers',
  'departmentmembers_member_id_fkey',
  'fk_departmentmembers_member_id_users'),
 ('departmentmembers', 'departmentmembers_pkey', 'pk_departmentmembers'),
 ('departments', 'departments_pkey', 'pk_departments'),
 ('departments', 'departments_name_key', 'uq_departments_name'),
 ('document', 'document_area_id_fkey', 'fk_document_area_id_subjectareas'),
 ('document',
  'document_proposition_type_id_fkey',
  'fk_document_proposition_type_id_propositiontypes'),
 ('document', 'document_pkey', 'pk_document'),
 ('document', 'name_lang_area_id', 'uq_document_name'),
 ('groupmembers',
  'groupmembers_group_id_fkey',
  'fk_groupmembers_group_id_groups'),
 ('groupmembers',
  'groupmembers_member_id_fkey',
  'fk_groupmembers_member_id_users'),
 ('groupmembers', 'groupmembers_pkey', 'pk_groupmembers'),
 ('groups', 'groups_pkey', 'pk_groups'),
 ('groups', 'groups_name_key', 'uq_groups_name'),
 ('oauth_token', 'oauth_token_id_fkey', 'fk_oauth_token_id_users'),
 ('oauth_token', 'oauth_token_pkey', 'pk_oauth_token'),
 ('page', 'page_pkey', 'pk_page'),
 ('policies', 'policies_pkey', 'pk_policies'),
 ('policies', 'policies_name_key', 'uq_policies_name'),
 ('postalvotes',
  'postalvotes_member_id_fkey',
  'fk_postalvotes_member_id_users'),
 ('postalvotes',
  'postalvotes_voting_id_fkey',
  'fk_postalvotes_voting_id_votingphases'),
 ('postalvotes', 'postalvotes_pkey', 'pk_postalvotes'),
 ('propositionnotes',
  'propositionnotes_proposition_id_fkey',
  'fk_propositionnotes_proposition_id_propositions'),
 ('propositionnotes',
  'propositionnotes_user_id_fkey',
  'fk_propositionnotes_user_id_users'),
 ('propositionnotes', 'propositionnotes_pkey', 'pk_propositionnotes'),
 ('propositions',
  'qualified_at_must_be_set',
  'ck_propositions_qualified_at_must_be_set'),
 ('propositions',
  'submitted_at_must_be_set',
  'ck_propositions_submitted_at_must_be_set'),
 ('propositions',
  'propositions_ballot_id_fkey',
  'fk_propositions_ballot_id_ballots'),
 ('propositions',
  'propositions_modifies_id_fkey',
  'fk_propositions_modifies_id_propositions'),
 ('propositions',
  'propositions_replaces_id_fkey',
  'fk_propositions_replaces_id_propositions'),
 ('propositions', 'propositions_pkey', 'pk_propositions'),
 ('propositiontags',
  'propositiontags_proposition_id_fkey',
  'fk_propositiontags_proposition_id_propositions'),
 ('propositiontags',
  'propositiontags_tag_id_fkey',
  'fk_propositiontags_tag_id_tags'),
 ('propositiontags', 'propositiontags_pkey', 'pk_propositiontags'),
 ('propositiontypes',
  'propositiontypes_policy_id_fkey',
  'fk_propositiontypes_policy_id_policies'),
 ('propositiontypes', 'propositiontypes_pkey', 'pk_propositiontypes'),
 ('propositiontypes',
  'propositiontypes_abbreviation_key',
  'uq_propositiontypes_abbreviation'),
 ('propositiontypes', 'propositiontypes_name_key', 'uq_propositiontypes_name'),
 ('secretvoters',
  'secretvoters_ballot_id_fkey',
  'fk_secretvoters_ballot_id_ballots'),
 ('secretvoters',
  'secretvoters_member_id_fkey',
  'fk_secretvoters_member_id_users'),
 ('secretvoters', 'secretvoters_pkey', 'pk_secretvoters'),
 ('subjectareas',
  'subjectareas_department_id_fkey',
  'fk_subjectareas_department_id_departments'),
 ('subjectareas', 'subjectareas_pkey', 'pk_subjectareas'),
 ('supporters', 'supporters_member_id_fkey', 'fk_supporters_member_id_users'),
 ('supporters',
  'supporters_proposition_id_fkey',
  'fk_supporters_proposition_id_propositions'),
 ('supporters', 'supporters_pkey', 'pk_supporters'),
 ('tags', 'tags_parent_id_fkey', 'fk_tags_parent_id_tags'),
 ('tags', 'tags_pkey', 'pk_tags'),
 ('tags', 'tags_name_key', 'uq_tags_name'),
 ('urns', 'urns_voting_id_fkey', 'fk_urns_voting_id_votingphases'),
 ('urns', 'urns_pkey', 'pk_urns'),
 ('urnsupporters',
  'urnsupporters_member_id_fkey',
  'fk_urnsupporters_member_id_users'),
 ('urnsupporters',
  'urnsupporters_urn_id_fkey',
  'fk_urnsupporters_urn_id_urns'),
 ('urnsupporters', 'urnsupporters_pkey', 'pk_urnsupporters'),
 ('user_login_token',
  'user_login_token_user_id_fkey',
  'fk_user_login_token_user_id_users'),
 ('user_login_token', 'user_login_token_pkey', 'pk_user_login_token'),
 ('userpassword',
  'userpassword_user_id_fkey',
  'fk_userpassword_user_id_users'),
 ('userpassword', 'userpassword_pkey', 'pk_userpassword'),
 ('userprofiles', 'userprofiles_id_fkey', 'fk_userprofiles_id_users'),
 ('userprofiles', 'userprofiles_pkey', 'pk_userprofiles'),
 ('userprofiles', 'userprofiles_sub_key', 'uq_userprofiles_sub'),
 ('users', 'users_pkey', 'pk_users'),
 ('users', 'users_email_key', 'uq_users_email'),
 ('users', 'users_name_key', 'uq_users_name'),
 ('voting_module', 'voting_module_pkey', 'pk_voting_module'),
 ('voting_module', 'voting_module_name_key', 'uq_voting_module_name'),
 ('voting_phase_types', 'voting_phase_types_pkey', 'pk_voting_phase_types'),
 ('votingphases', 'state_valid', 'ck_votingphases_state_valid'),
 ('votingphases',
  'votingphases_department_id_fkey',
  'fk_votingphases_department_id_departments'),
 ('votingphases',
  'votingphases_phase_type_id_fkey',
  'fk_votingphases_phase_type_id_voting_phase_types'),
 ('votingphases', 'votingphases_pkey', 'pk_votingphases')]


def rename_constraint(table, current_name, new_name):
    op.execute(f"ALTER TABLE {table} RENAME CONSTRAINT {current_name} TO {new_name}")


def upgrade():
    for table, name_down, name_up in constraints:
        rename_constraint(table, name_down, name_up)


def downgrade():
    for table, name_down, name_up in constraints:
        rename_constraint(table, name_up, name_down)
